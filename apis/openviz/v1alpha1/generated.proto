/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/


// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto2";

package go.openviz.dev.grafana_operator.apis.openviz.v1alpha1;

import "k8s.io/apimachinery/pkg/apis/meta/v1/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/generated.proto";
import "k8s.io/apimachinery/pkg/runtime/schema/generated.proto";
import "kmodules.xyz/client-go/api/v1/generated.proto";

// Package-wide variables from generator "generated".
option go_package = "v1alpha1";

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=dashboards,singular=dashboard,categories={grafana,openviz,appscode}
// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
message Dashboard {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DashboardSpec spec = 2;

  optional DashboardStatus status = 3;
}

message DashboardList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Dashboard items = 2;
}

message DashboardReference {
  optional int64 id = 1;

  optional string uid = 2;

  optional int64 orgID = 3;

  optional string title = 4;

  optional string url = 5;

  optional int64 version = 6;
}

message DashboardSpec {
  optional TargetRef grafana = 1;

  // +optional
  // +kubebuilder:pruning:PreserveUnknownFields
  optional k8s.io.apimachinery.pkg.runtime.RawExtension model = 2;

  optional int64 folderId = 3;

  optional bool overwrite = 4;
}

message DashboardStatus {
  // ObservedGeneration is the most recent generation observed for this resource. It corresponds to the
  // resource's generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  // Phase indicates the state this Vault cluster jumps in.
  // +optional
  optional string phase = 2;

  // The reason for the current phase
  // +optional
  optional string reason = 3;

  // Dashboard indicates the updated dashboard database
  // +optional
  optional DashboardReference dashboard = 4;

  // Represents the latest available observations of a Dashboard current state.
  // +optional
  repeated kmodules.xyz.client_go.api.v1.Condition conditions = 5;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=dashboardtemplates,singular=dashboardtemplate,scope=Cluster,categories={grafana,openviz,appscode}
// +kubebuilder:subresource:status
message DashboardTemplate {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DashboardTemplateSpec spec = 2;
}

message DashboardTemplateList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated DashboardTemplate items = 2;
}

message DashboardTemplateReference {
  optional int64 id = 1;

  optional string uid = 2;

  optional string title = 3;

  repeated string tags = 4;

  optional string timezone = 5;

  optional int64 schemaVersion = 6;

  optional int64 version = 7;
}

message DashboardTemplateSpec {
  optional DashboardTemplateReference dashboardtemplate = 1;

  optional int64 folderId = 2;

  optional bool overwrite = 3;
}

// +kubebuilder:object:root=true
// +kubebuilder:resource:path=datasources,singular=datasource,categories={grafana,openviz,appscode}
// +kubebuilder:printcolumn:name="Status",type="string",JSONPath=".status.phase"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
message Datasource {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta metadata = 1;

  optional DatasourceSpec spec = 2;

  optional DatasourceStatus status = 3;
}

message DatasourceList {
  optional k8s.io.apimachinery.pkg.apis.meta.v1.ListMeta metadata = 1;

  repeated Datasource items = 2;
}

message DatasourceSpec {
  optional TargetRef grafana = 1;

  optional int64 id = 2;

  optional int64 orgId = 3;

  optional string name = 4;

  optional string type = 5;

  optional string access = 6;

  optional string url = 7;

  optional string password = 8;

  optional string user = 9;

  optional string database = 10;

  optional bool basicAuth = 11;

  optional string basicAuthUser = 12;

  optional string basicAuthPassword = 13;

  optional bool isDefault = 14;

  optional bool editable = 15;
}

message DatasourceStatus {
  // ObservedGeneration is the most recent generation observed for this resource. It corresponds to the
  // resource's generation, which is updated on mutation by the API Server.
  // +optional
  optional int64 observedGeneration = 1;

  optional int64 datasourceID = 2;

  optional string phase = 3;

  optional string reason = 4;

  repeated kmodules.xyz.client_go.api.v1.Condition conditions = 5;
}

message TargetRef {
  optional string apiVersion = 1;

  optional string kind = 2;

  optional string name = 3;
}

